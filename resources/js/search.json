[[{"l":"Welcome to the Parsley documentation","p":["Parsley is an easy-to-use reflection-based dependency injection package that fits into any Go application. It bridges the gap between dependency configuration and service activation. Want to know how? Read on."]}],[{"l":"Getting started"},{"l":"Dependency mapping configuration","p":["The dependency mapping configuration in Parsley requires types, interfaces, and constructor methods - basically, the same things you need to wire dependencies manually.","In Parsley, constructor methods (you may know them as initializers or provider functions) are the centerpiece that defines the mappings between abstractions (interfaces) and implementation types. Dependencies, i.e., the services required by the implementation type, are expressed as function parameters. The return type of a constructor method specifies the abstraction, whereby the method itself is responsible for creating the actual object instance, thus acting as the glue between implementation- and interface types."]}]]